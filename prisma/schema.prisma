generator client {
  provider        = "prisma-client"
  output          = "../src/lib/generated/prisma"
  engineType      = "client"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  externalId String   @unique @map("external_id")
  username   String   @unique
  email      String   @unique
  image      String   @default("https://img.clerk.com/preview.png")
  createdAt  DateTime @default(now()) @map("created_at")

  videos      Video[]
  playlists   Playlist[]
  watchLater  Video[]        @relation("WatchLater")
  likedVideos Video[]        @relation("LikedVideos")
  history     HistoryVideo[]

  @@map("users")
}

model Video {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  title     String
  thumb     String
  duration  String   @default("00:00")
  youtubeId String   @map("youtube_id")
  createdAt DateTime @default(now()) @map("created_at")

  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  playlists        Playlist[]
  watchLaterUsers  User[]         @relation("WatchLater")
  likedVideosUsers User[]         @relation("LikedVideos")
  historyVideo     HistoryVideo[]

  @@map("videos")
}

model HistoryVideo {
  id        Int      @id @default(autoincrement())
  userId    String   @map("user_id")
  videoId   String   @map("video_id")
  videoTime Int      @default(0) @map("video_time")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@map("history_videos")
}

model Playlist {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  name      String
  isPublic  Boolean  @default(true) @map("is_public")
  createdAt DateTime @default(now()) @map("created_at")

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  videos Video[]

  @@map("playlists")
}
